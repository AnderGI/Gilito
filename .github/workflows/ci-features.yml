name: Features CI/CD

on: 
  push:
   branches:
     - 'feature/**'

env:
  R2_RW_ACCESS_KEY_ID: ${{ secrets.R2_FEATURES_RW_ACCESS_KEY_ID }}
  R2_RW_SECRET_ACCESS_KEY: ${{ secrets.R2_FEATURES_RW_SECRET_ACCESS_KEY }}
  R2_BUCKET_MAIN: ${{ secrets.R2_FEATURES_BUCKET_MAIN }}
  R2_BUCKET_BACKUP: ${{ secrets.R2_FEATURES_BUCKET_BACKUP }}
  R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
  R2_REGION: ${{ secrets.R2_REGION }}
  RABBITMQ_HOSTNAME: ${{ secrets.FEATURES_RABBITMQ_HOSTNAME }}
  RABBITMQ_USERNAME: ${{ secrets.FEATURES_RABBITMQ_USERNAME }}
  RABBITMQ_PASSWORD: ${{ secrets.FEATURES_RABBITMQ_PASSWORD }}
  RABBITMQ_PORT: ${{ secrets.FEATURES_RABBITMQ_PORT }}
  DATABASE_HOST: ${{ secrets.FEATURES_DATABASE_HOST }}
  DATABASE_PORT: ${{ secrets.FEATURES_DATABASE_PORT }}
  DATABASE_USER: ${{ secrets.FEATURES_DATABASE_USER }}
  DATABASE_PASSWORD: ${{ secrets.FEATURES_DATABASE_PASSWORD }}
  DATABASE_NAME: ${{ secrets.FEATURES_DATABASE_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install
        run: |
          npm install
      - name: npm run lint
        run: |
          npm run lint
      - name: Configure exchanges in RabbitMQ
        run: npm run feature:rabbitmq:configure
      - name: npm run build
        run: |
          npm run build --if-present
      - name: Unit tests
        run: |
          npm run test:unit
      - name: End-to-end tests
        run: |
          npm run features:test:e2e